name: Release APIM-GATEWAY Agent
on:
  workflow_dispatch:
    inputs:
      release_version:
        required: true
        type: string
        description: "Release Version"
      next_version:
        type: string
        description: "Next Development Version"
  pull_request_target:
    types:
      - labeled
      - closed
    paths:
      - '**/common-gradle-scripts/**'
      - '**/common-agent/**'
      - '**/apk/**'
      - '**/kong/**'
    branches:
      - 'master'
env:
  GH_TOKEN: ${{ secrets.WSO2_APIM_BOT_TOKEN }}
concurrency:
  group: apim-apk-agent-${{ github.event.number || github.run_id }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.24"
      - name: Install Revive
        shell: sh
        run: |
          go install github.com/mgechev/revive@v1.3.4
      - name: Checkout apim-gw-connectors-repo
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
          token: ${{ secrets.WSO2_APIM_BOT_TOKEN }}
      - name: Set release username and email
        shell: sh
        run: |
          git config --global user.name ${{ secrets.WSO2_APIM_BOT_USER }}
          git config --global user.email ${{ secrets.WSO2_APIM_BOT_EMAIL }}
      - name: checkout pull request and merge.
        shell: sh
        if: github.event_name == 'pull_request_target' && contains(github.event.label.name, 'trigger-action')
        run: |
          gh pr checkout ${{ github.event.number }} -b pr-${{ github.event.number }}
          git checkout pr-${{ github.event.number }}
          git merge origin/main
      - name: Clean workspace before release
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.release_version != '' && github.event.inputs.next_version != ''
        run: |
          find . -name ".gradle" -type d -exec rm -rf {} + 2>/dev/null || true
          find . -name "build" -type d -exec rm -rf {} + 2>/dev/null || true
          find . -name "*.out" -delete 2>/dev/null || true
          git clean -fd
          echo "Repository status after cleanup:"
          git status --porcelain
      - name: Run Release Gradle build
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.release_version != '' && github.event.inputs.next_version != ''   
        run: |
          git checkout -b apim-gw-agents-1.x
          git push origin apim-gw-agents-1.x
          cd common-agent
          ./gradlew release -Prelease.useAutomaticVersion=true -Pdocker_organization=${{ secrets.DOCKER_ORGANIZATION }} -Pdocker_username=${{ secrets.DOCKER_USERNAME }} -Pdocker_password=${{ secrets.DOCKER_PASSWORD }} -Prelease.releaseVersion=${{ github.event.inputs.release_version }} -Prelease.newVersion=${{ github.event.inputs.next_version }} -PmultiArch=true -PreleaseBranch=apim-gw-agents-1.x
      - name: Run Gradle Build
        run: |
          cd common-agent
          ./gradlew build
      - name: Push docker images to docker hub
        if: github.event_name == 'pull_request_target' && github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          cd common-agent
          ./gradlew docker_push -Pdocker_organization=${{ secrets.DOCKER_ORGANIZATION }} -Pdocker_username=${{ secrets.DOCKER_USERNAME }} -Pdocker_password=${{ secrets.DOCKER_PASSWORD }} -Pimage_version=latest -PmultiArch=true
          ./gradlew docker_push -Pdocker_organization=${{ secrets.DOCKER_ORGANIZATION }} -Pdocker_username=${{ secrets.DOCKER_USERNAME }} -Pdocker_password=${{ secrets.DOCKER_PASSWORD }} -Pimage_version=${{ github.sha }} -PmultiArch=true
      - name: run codecov
        uses: codecov/codecov-action@v3
        with:
          verbose: true # optional (default = false)
          directory: common-agent
          flags: apim-gw-agents
